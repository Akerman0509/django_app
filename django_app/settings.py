"""
Django settings for myDjango1 project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from django_app.config.installed_apps import INSTALLED_APPS
from django_app.config.middleware_config import MIDDLEWARE
from django_app.config.database_config import *
from django_app.config.url_config import *
from django_app.config.log_config import *
from django_app.config.jwt_config import *
from django_app.config.timezone_config import *
from django_app.config.key_config import *
import os




from dotenv import load_dotenv
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(dotenv_path=BASE_DIR / '.env')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-981%zdz(uosawhj8=(#42))mbg#&q^de)2%w2or0_#a=82%_st'


ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        "DIRS": [os.path.join(BASE_DIR, "templates"), ],
        # "DIRS":[],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



SECRET_KEY = "supersupersecretkey"


# STORAGES = {
#     "default": {
#         "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
#         "OPTIONS": {
#             "access_key": os.getenv("AWS_ACCESS_KEY_ID"),
#             "secret_key": os.getenv("AWS_SECRET_ACCESS_KEY"),
#             "bucket_name": os.getenv("AWS_STORAGE_BUCKET_NAME"),
#             "region_name": "ap-southeast-1",
#         },
#     },
#     "staticfiles": {
#         "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
#         "OPTIONS": {
#             "access_key": os.getenv("AWS_ACCESS_KEY_ID"),
#             "secret_key": os.getenv("AWS_SECRET_ACCESS_KEY"),
#             "bucket_name": os.getenv("AWS_STORAGE_BUCKET_NAME"),
#             "region_name": "ap-southeast-1",
#         },
#     },
# }

AWS_STORAGE_BUCKET_NAME=os.getenv("AWS_STORAGE_BUCKET_NAME","default_bucket_name")
AWS_S3_REGION_NAME="ap-southeast-1"
AWS_S3_CUSTOM_DOMAIN = f"{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com"


# # AWS_QUEYSTRING_AUTH = False
# STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'
STATIC_URL = 'statics/'

STATIC_ROOT = BASE_DIR / 'staticfiles'